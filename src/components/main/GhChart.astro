---
interface Props {
    username: string;
}
const { username } = Astro.props;
import Card from "./Card.astro";
---

<Card isMulti="false">
    <div class="placeholder py-2 relative">
        <!-- 图片本体 -->
        <img src={"https://ghchart.rshah.org/f59f17/" + username}
             alt="crrashh1542's GitHub chart"
             id="gh-chart"
             class="hidden m-auto overflow-x-scroll" />

        <!-- 加载动画，移植自 MDUI v1 -->
        <!-- Copyright (C) 2016-2021 zdhxiong | Licensed under MIT -->
        <div class="mdui-spinner absolute justify-center" id="gh-spinner">
            <div class="mdui-spinner-layer">
                <div class="mdui-spinner-circle-clipper mdui-spinner-left">
                    <div class="mdui-spinner-circle"></div>
                </div>
                <div class="mdui-spinner-gap-patch">
                    <div class="mdui-spinner-circle"></div>
                </div>
                <div class="mdui-spinner-circle-clipper mdui-spinner-right">
                    <div class="mdui-spinner-circle"></div>
                </div>
            </div>
        </div>
    </div>
</Card>

<style lang="less">
    @import url("@/styles/global.less");

    // 经过测定，该 API 返回的 svg 高度为 102px
    .placeholder {
        height: 118px; // 102+2*2*4
        img {
            height: 102px;
        }
    }

    // 以下内容为加载动画，移植自 MDUI v1
    // Copyright (C) 2016-2021 zdhxiong | Licensed under MIT
    @animation-curve-default: cubic-bezier(0.4, 0, 0.2, 1);
    .mdui-spinner {
        top: calc((102px + 2*2*4px - 36px) / 2);
        left: calc((100% - 36px) / 2);
        width: 36px;
        height: 36px;
        animation: mdui-spinner 1568ms linear infinite;
    }
    @keyframes mdui-spinner {
        to {
            transform: rotate(360deg);
        }
    }
    .mdui-spinner-layer {
        position: absolute;
        width: 100%;
        height: 100%;
        border-color: darken(@c-color-theme, 10%);
        opacity: 0;
        opacity: 1;
        animation: mdui-spinner-layer-fill-unfill-rotate 5332ms
            @animation-curve-default infinite both;
    }

    @keyframes mdui-spinner-layer-fill-unfill-rotate {
        12.5% { transform: rotate(135deg);  }
        25%   { transform: rotate(270deg);  }
        37.5% { transform: rotate(405deg);  }
        50%   { transform: rotate(540deg);  }
        62.5% { transform: rotate(675deg);  }
        75%   { transform: rotate(810deg);  }
        87.5% { transform: rotate(945deg);  }
        to    { transform: rotate(1080deg); }
    }
    .mdui-spinner-gap-patch {
        position: absolute;
        top: 0;
        left: 45%;
        width: 10%;
        height: 100%;
        overflow: hidden;
        border-color: inherit;
        .mdui-spinner-circle {
            left: -450%;
            box-sizing: border-box;
            width: 1000%;
        }
    }
    .mdui-spinner-circle-clipper {
        position: relative;
        display: inline-block;
        width: 50%;
        height: 100%;
        overflow: hidden;
        border-color: inherit;
        .mdui-spinner-circle {
            position: absolute;
            top: 0;
            right: 0;
            bottom: 0;
            box-sizing: border-box;
            width: 200%;
            height: 100%;
            border-color: inherit;
            border-style: solid;
            border-width: 3.5px;
            border-bottom-color: transparent !important;
            border-radius: 50%;
            animation: none;
        }
        &.mdui-spinner-left {
            float: left;
            .mdui-spinner-circle {
            left: 0;
            border-right-color: transparent !important;
            transform: rotate(129deg);
            animation: mdui-spinner-left-spin 1333ms @animation-curve-default infinite both;
            }
        }
        &.mdui-spinner-right {
            float: right;
            .mdui-spinner-circle {
            left: -100%;
            border-left-color: transparent !important;
            transform: rotate(-129deg);
            animation: mdui-spinner-right-spin 1333ms @animation-curve-default infinite both;
            }
        }
    }
    @keyframes mdui-spinner-left-spin {
        from { transform: rotate(130deg); }
        50%  { transform: rotate(-5deg);  }
        to   { transform: rotate(130deg); }
    }
    @keyframes mdui-spinner-right-spin {
        from { transform: rotate(-130deg); }
        50%  { transform: rotate(5deg);    }
        to   { transform: rotate(-130deg); }
    }
</style>

<script>
    // 当 img 加载成功时为 display 为 block（即加上 block 类名），spinner 为 none（类名 hidden）
    const [ghChart, ghSpinner] = 
        [document.getElementById('gh-chart'), document.getElementById('gh-spinner')]
    // 判断是否加载完成
    ghChart.onload = () => {
        ghChart.classList.remove('hidden')
        ghChart.classList.add('block')
        ghSpinner.classList.add('hidden')
    }
</script>