---
interface Props {
    title: string
    nav: customObject[]
}
const { title, nav } = Astro.props
---

<header class="fixed flex w-full whitespace-nowrap z-50 top">
    <div class="title text-xl font-semibold">
        <a href=".">{ title }</a></div>
    <div class="grow" />
    <div class="link h-4 leading-7">
        { nav.map(item => (
            <span class="item icon-external">
                <a href={ item.url } target="_blank">{ item.name }</a>
            </span>
        )) }
    </div>
</header>


<style is:global lang="less">
    @import url('@/styles/global.less');

    // 基础样式
    header {
        padding: 1rem var(--appbar-padding-horizontal);
        background-color: #fff;
        // backdrop-filter: blur(2px);

        .title:hover { color: var(--c-color-theme); }
        .item:hover { color: var(--c-color-theme); }
        .link {
            display: var(--appbar-link-display);
            .item {
                padding: 0 16px;
            }
        }
    }
    header:not(.top) {
        border-bottom: 1px solid @c-color-bar-border;
    }

    // 响应式适配 ---- PC
    @media screen and (min-width: 1024px) {
        :root {
            --appbar-padding-horizontal: calc(@c-layout-padding - 5%);
            --appbar-link-display: block;
        }
    }

    // 响应式适配 ---- 移动端
    @media screen and (max-width: 1024px) {
        :root {
            --appbar-padding-horizontal: 1em;
            --appbar-link-display: none;
        }
    }
</style>

<script lang="ts">
    // 监听用户是否到顶
    let barEle = document.getElementsByTagName('header')[0]
    // 如果到顶加上 .top 以调整样式
    let scroll = () => {
        let mainPosition = document.getElementsByTagName('main')[0].getBoundingClientRect()
        if (mainPosition.y == 0) {
            barEle.classList.add('top')
        } else {
            barEle.classList.remove('top')
        }
    }
    window.addEventListener('scroll', scroll)
    // window.removeEventListener('scroll', scroll)
</script>